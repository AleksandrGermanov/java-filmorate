CREATE TABLE IF NOT EXISTS users(
id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email varchar(128) UNIQUE,
login varchar(128) UNIQUE,
name varchar(128),
birthday date
);

CREATE TABLE IF NOT EXISTS films(
id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar(128),
description varchar(256),
release_date date,
duration int,
rating_id int
);

CREATE TABLE IF NOT EXISTS likes(
film_id int NOT NULL REFERENCES films(id) ON DELETE CASCADE,
user_id int NOT NULL REFERENCES users(id) ON DELETE CASCADE,
CONSTRAINT likes_pk PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friendship_statuses(
id int NOT NULL PRIMARY KEY,
name varchar(64) NOT NULL
);

CREATE TABLE IF NOT EXISTS friendship_and_requests(
request_exporter_id int NOT NULL REFERENCES users(id) ON DELETE CASCADE,
request_importer_id int NOT NULL REFERENCES users(id) ON DELETE CASCADE,
friendship_status_id int DEFAULT 1 REFERENCES friendship_statuses(id) ON DELETE SET DEFAULT,
CONSTRAINT fr_pk PRIMARY KEY (request_exporter_id, request_importer_id)
);

CREATE TABLE IF NOT EXISTS ratings(
id int NOT NULL PRIMARY KEY,
name varchar(64) NOT NULL
);

ALTER TABLE films
ADD CONSTRAINT IF NOT EXISTS rating_id_fk 
FOREIGN KEY (rating_id) REFERENCES ratings(id) ON DELETE SET NULL;

CREATE TABLE IF NOT EXISTS genres(
id int NOT NULL PRIMARY KEY,
name varchar(64) NOT NULL
);

CREATE TABLE IF NOT EXISTS films_genres(
film_id int NOT NULL REFERENCES films(id) ON DELETE CASCADE,
genre_id int NOT NULL REFERENCES genres(id) ON DELETE CASCADE,
CONSTRAINT fg_pk PRIMARY KEY (film_id, genre_id)
);

